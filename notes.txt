##### Flow

Home: 
Not Logged In: options to login/register

Logged In: 
- view playlist
- logout 
- create new song

Admin Login: 
- View all songs 
- should not be allowed to delete songs. 
- allowed to view all accounts, delete accounts? 


### To DO ####
password strength
injection




#### SECURE NOTES ########
it is safer to have the password for admin saved in the env variables.   






app.get('/songs', isAuthenticated, async (req, res) => {
    try {
      const songs = await Song.find({ userId: req.user.id });
      res.render('songs', { songs });
    } catch (err) {
      console.error(err);
      res.status(500).send('Error fetching songs');
    }
  });


    app.post('/songs/create', isAuthenticated, async (req, res) => {
    const song = new Song({
      userId: req.user.id,
      title: req.body.title,
      style: req.body.style
    });
  
    try {
      const savedSong = await song.save();
      res.redirect('/songs/' + savedSong.id);
    } catch (err) {
      console.error(err);
      res.status(500).send('Error creating song');
    }
  });



  app.get('/logout', (req, res) => {
    req.logout();
    res.redirect('/login');
  });


app.get('/logout', (req, res) => {
    req.session.destroy(err => {
      if (err) {
        console.error('Error destroying session:', err);
        return res.sendStatus(500);
      }
      req.logout();
      res.redirect('/login');
    });
  });

    app.post('/login', checkNotAuthenticated, passport.authenticate('local', {
    successRedirect: '/',
    failureRedirect: '/login',
    failureFlash: true
  }));